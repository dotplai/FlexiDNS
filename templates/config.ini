# Some variables have default fallback values.
# If not specified in this file, the program will use these fallback values.

[General]
    # Which API to fetch the public IP address.
    # If using `ifconfig` will not obtain only IP address (V4), but including user_agent, mime, and etc. also it's easier to use...
    # If using `ipify` will obtain only the IP address of version 4 and 6. also faster, simplicity, and API-friendliness.
    # If using `icanhazip` will obtain only the IP address of version 4. also fastest, simplicity, and API-friendliness.
    
    # If you want to use `ifconfig`, it's can be set more path Strings:
    # - `ifconfig?all.json`: Get all information in JSON format. (Dumped at `$PWD/dumps/ifconfig@DMY:HMS.jsonc`)
    # - `ifconfig?ip`: Same as `ifconfig`...
    # - `ifconfig`: Get only the IP address in plain text format.
    # ;; Fallback default: ipify
    queryAPI = "ipify"
    # Take Note. JUST USE `ipify` 'cause It's more simple and faster enoght for get v4 and v6 address.
    # Also `ifconfig.me` may rate limit requests or block certain headers if not user-agent spoofed.
    
    # mode of looping method
    # This specifies how the program will check for changes in the IP address.
    # Have two options:
    # - `intervalTime`: Check for changes at regular intervals.
    # - `unixEpoch`: Check for changes at specific times of the day.
    # - 'serviceSync': Using serivce sync, this mode is operated by Service. (/services/FlexiDns.service)
    # ;; Fallback default: intervalTime
    mode = "intervalTime"

    # The sync time specifies the time between each loop check and update.
    # This value will dynamic change unit follow mode:
    # - If mode set as `intervalTime`, syncTime unit is seconds.
    # - If mode set as `unixEpoch`,    syncTime unit is seconds. (start at 00:00 am)
    # Expecting to set as `serviceSync`, syncTime will be ignored.
    # ;; Fallback default: 36000
    syncTime = 36000

[Logging]
    # Important: This section is used to configure the logging behavior of the program.
    # Note. If you find way to disabled console log, It's cannot set BRO! JUST STOP FINDING!
    # But you can imperment by yourself~ 

    # Enable or disable logging to files
    enabledFile = True

    # Which logging level can output console?
    # - normal : Normal log level, which includes general infomation, warnings and errors.
    # - debug  : Debug log level, which includes all normal logs and additional debug information.
    # - error  : Error log level, which includes only error messages.
    consoleIncluded = [normal]

    # Which logging level can output log file?
    # - normal : Normal log level, which includes general infomation, warnings and errors.
    # - debug  : Debug log level, which includes all normal logs and additional debug information.
    # - error  : Error log level, which includes only error messages.
    logIncluded = [normal, debug]

    # The log file name will split by log level.
    splitLog = True

[LearningBehavior]
    # Time shifting
    # The program will shift the next update time based on the previous updates.
    # This is a list of four values:
    # - The first value is a boolean indicating whether to enable shifting.
    # - The second value is the time in seconds to shift when next retry.
    # ;; Fallback default: [True, 300]
    timeShift = [True, 300]

[CloudFlare]
    # Enable or disable CloudFlare API integration
    enabled = False

    # Email address associated with the CloudFlare account
    email = "YOUR_EMAIL_OF_CLOUDFLARE"

    # API Token (not a password). Generate from: https://dash.cloudflare.com/profile/api-tokens
    password = "YOUR_GLOBAL_OR_LOCAL_API_KEY"

    # Fully Qualified Domain Name (FQDN)
    # Specify the list of hostnames or domains for dynamic updates (e.g., "example.com" or "www.example.com").
    # The FQDN can be a single domain or a list of domains.
    # Example: "example.com" or ["example.com", "www.example.com"]
    # Note: The FQDN must be in JSON format. For example:
    # - For a single record: FQDN = '{"A": ["example.com"]}'
    # - For multiple records: FQDN = '{"A": ["example.com"], "AAAA": ["example.com"]}'
    FQDN = '{"A": [...], "AAAA": [...]}'

    # API Cache Settings (referred to as `RecordsCache`):
    # - `cacheTimeout`: Duration (in seconds) for caching API responses before refreshing.
    # - Set to -1 for unlimited caching (reuse the same cache indefinitely).
    # - Set to 0 to disable caching (fetch data on every API call).
    # ;; Fallback default: 172800 (48 hours or 2 days)
    cacheTimeout = 172800

    # Persistent Cache
    # If enabled, cached data will persist even if the program exits unexpectedly
    # (e.g., due to errors, exceptions, or manual termination). The cached data
    # will remain valid until its expiry time.
    # Note: This may increase storage usage and is recommended for slow or low-end
    # hardware to enhance performance.
    # ;; Fallback default: False
    cachePersistent = False

[NoIP]
    # This API is currently under development and not yet available for release.
    # Enabling it will not function as expected.

    # Enable or disable NoIP API integration.
    enabled = False
    
    # username associated with the NoIP account.
    username = "YOUR_USERNAME_OF_NOIP"

    # password associated with the NoIP account.
    password = "YOUR_PASSWOPD_OF_NOIP"

    # Fully Qualified Domain Name (FQDN)
    # Specify the list of hostnames or domains for dynamic updates (e.g., "dynamic.me.com" or "me.com").
    FQDN = '{"A": [...], "AAAA": [...]}'

[DynDNS]
    # This API is currently under development and not yet available for release.
    # Enabling it will not function as expected.

    # Enable or disable DynDNS API integration.
    enabled = False
    
    # username associated with the DynDNS account.
    username = "YOUR_USERNAME_OF_NOIP"

    # password associated with the DynDNS account.
    password = "YOUR_PASSWOPD_OF_NOIP"

    # Fully Qualified Domain Name (FQDN)
    # Specify the list of hostnames or domains for dynamic updates (e.g., "dynamic.me.com" or "me.com").
    FQDN = '{"A": [...], "AAAA": [...]}'
